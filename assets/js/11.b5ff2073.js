(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{166:function(e,t,r){"use strict";r.r(t);var a={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},o=r(6),s=Object(o.a)(a,function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[r("h1",{attrs:{id:"git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[e._v("#")]),e._v(" Git")]),e._v(" "),r("p",[e._v("Bookmark this page: Flight rules for git "),r("a",{attrs:{href:"https://github.com/k88hudson/git-flight-rules",target:"_blank",rel:"noopener noreferrer"}},[e._v("git-flight-rules"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Read this: "),r("a",{attrs:{href:"https://www.atlassian.com/git/tutorials",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git tutorial"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("We use "),r("a",{attrs:{href:"https://github.com/kumpan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github"),r("OutboundLink")],1),e._v(" for all our internal development. Here is a cheat sheet: [Git cheat sheet] (https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf)")]),e._v(" "),r("p",[e._v("Follow these 3 rules:")]),e._v(" "),r("h2",{attrs:{id:"rule-1-create-a-git-repository-for-every-new-project"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rule-1-create-a-git-repository-for-every-new-project","aria-hidden":"true"}},[e._v("#")]),e._v(" Rule #1: Create a Git repository for every new project")]),e._v(" "),r("p",[e._v("This first rule is quite straightforward, but making a habit out of it is very important. Every time you start working on something new   you should create a new Git repository and push it to GitHub.")]),e._v(" "),r("h2",{attrs:{id:"rule-2-create-a-new-branch-for-every-new-feature"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rule-2-create-a-new-branch-for-every-new-feature","aria-hidden":"true"}},[e._v("#")]),e._v(" Rule #2: Create a new branch for every new feature")]),e._v(" "),r("p",[e._v("When you start working on something new in a project, create a dedicated branch for this new feature, give it a meaningful name (e.g. feature/contact-me-section), and commit all the code to that specific branch. Recommended reading "),r("a",{attrs:{href:"https://guides.github.com/introduction/flow/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub flow"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"rule-3-use-pull-requests-to-merge-code-to-master"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rule-3-use-pull-requests-to-merge-code-to-master","aria-hidden":"true"}},[e._v("#")]),e._v(" Rule #3: Use Pull Requests to merge code to Master")]),e._v(" "),r("p",[e._v("Every repository starts with a master branch by default. You should never push changes directly to the master branch. Instead, you should use feature branches as described above, and open a new Pull Request to merge the feature branch code with the master branch code. Also remember to ask for a review from one of your colleagues. "),r("a",{attrs:{href:"https://medium.com/palantir/code-review-best-practices-19e02780015f",target:"_blank",rel:"noopener noreferrer"}},[e._v("Code review best practices"),r("OutboundLink")],1)])])},[],!1,null,null,null);s.options.__file="Git.md";t.default=s.exports}}]);